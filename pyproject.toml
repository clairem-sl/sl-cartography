[project]
name = "sl-cartography"
version = "0.12"
requires-python = ">=3.11"
description = "Libraries and tools for performing Second Life Cartography"
keywords = ["sl", "secondlife", "second life", "cartography"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved",
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.11",
    "Topic :: Games/Entertainment",
    "Topic :: Games/Entertainment :: Multi-User Dungeons (MUD)",
    "Topic :: Games/Entertainment :: Simulation",
    "Topic :: Multimedia :: Graphics :: Capture",
    "Topic :: Utilities",
]
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    {name = "Claire Morgenthau", email = "claire_morgenthau@outlook.com"}
]
dependencies = [
    "pillow",
    "httpx",
    "httpx[http2]",
    'uvloop; platform_system == "Linux" and platform_python_implementation == "CPython"',
    "msgpack",
    "appdirs",
    "beautifulsoup4",
    "ruamel.yaml",
    "pytz",
    "scikit-image",
    "tomli>=1.1.0; python_version < '3.11'",
    "tzdata",
]

[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "pillow",
    "httpx",
    "httpx[http2]",
    'uvloop; platform_system == "Linux" and platform_python_implementation == "CPython"',
    "msgpack",
    "appdirs",
    "beautifulsoup4",
    "ruamel.yaml",
    "pytz",
    #
    "black",
    "black[d]",
    "isort",
    "pytest",
    #
    "setuptools>=40.8.0",
    "wheel",
]

[project.optional-dependencies]
# Dev dependencies.
dev = [
    "black",
    "black[d]",
    "isort",
]

[tool.isort]
profile = "black"
py_version = 310

[tool.black]
line-length = 120
target-version = ['py311']

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]

[tool.ruff]
select = ["E", "F", "B", "S", "D", "YTT", "ANN", "CPY", "RET", "SLOT", "SIM", "TCH", "ARG", "PTH", "FIX", "PGH", "PL", "TRY", "PERF", "RUF"]
ignore = [
    "ANN101",  # No need to annotate 'self'
    "ANN102",  # No need to annotate 'cls' (in @classmethod)
    "ANN204",  # No need to annotate return values of magic methods
    "D105",  # Do not enforce docstring for magic method; they are mostly self-describing
    "D200",  # Do not force 1-line docstring
    "D204",  # Do not force blank line after class docstring
    "D205",  # Do not demand "1 blank line after docstring summary"
    "D212",  # Do not force docstring summary at first line, so we don't have the ugly indented summary
    "D400",  # Do not enforce period at end of 1st line of docstring ...
    "D415",  # ... or any closing mark for that matter
    "D401",  # I have no idea what "imperative mood" is; so subjective
    "D411",  # This is buggy (see issue #7216 in Ruff's repo)
    "E501",  # I disagree with short line lengths
    "PLR0912",  # "Too many branches (18 > 12)" we shall silent this for now...
    "PLR0913",  # "Too many arguments to function call (12 > 5)" we also shall silent this for now...
    "PLR0915",  # "Too many statements (58 > 50)" ignore as well...
    "S101",  # Don't warn use of 'assert', because we sometimes need to force type detection
    "TRY003",  # Don't complain on long exception message
]
target-version = "py311"
